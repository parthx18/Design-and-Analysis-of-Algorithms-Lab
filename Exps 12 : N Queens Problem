#include <stdio.h>
int isSafe(int row, int col, int n, int board[n][n]) {
	int i, j;
	for (i = 0; i < row; i++) {
		if (board[i][col] == 1)
			return 0;
	}
	for (i = row - 1, j = col - 1; i >= 0 && j >= 0; i--, j--) {
		if (board[i][j] == 1)
			return 0;
	}
	for (i = row - 1, j = col + 1; i >= 0 && j < n; i--, j++) {
		if (board[i][j] == 1)
			return 0;
	}

	return 1;
}
int solveNQueens(int row, int n, int board[n][n]) {
	if (row == n)
		return 1;
	int count = 0;
	for (int col = 0; col < n; col++) {
		if (isSafe(row, col, n, board)) {
			board[row][col] = 1;
			count += solveNQueens(row + 1, n, board);
			board[row][col] = 0;
		}
	}
	return count;
}
int nQueen(int n) {
	int board[n][n];
	for (int i = 0; i < n; i++)
		for (int j = 0; j < n; j++)
			board[i][j] = 0;
	return solveNQueens(0, n, board);
}
int main() {
	int n;
	scanf("%d", &n);
	printf("%d\n", nQueen(n));
	return 0;
}
